imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: '@AppBundle/Resources/config/services.yml'}
    - { resource: "@StaticBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: cs

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

#Sonata project Configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]

sonata_admin:
    title:                'Å pizza'
    title_logo:           spizza_logo.png
    options:
        html5_validate:       false
    assets:
        stylesheets:

            # Defaults:
            - bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css
            - bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css
            - bundles/sonatacore/vendor/ionicons/css/ionicons.min.css
            - bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css
            - bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css
            - bundles/sonataadmin/vendor/iCheck/skins/square/blue.css
            - bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css
            - bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css
            - bundles/sonatacore/vendor/select2/select2.css
            - bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css
            - bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css
            - bundles/sonataadmin/css/styles.css
            - bundles/sonataadmin/css/layout.css
            - bundles/sonataadmin/css/tree.css
            - bundles/sonataadmin/css/colors.css
            - assets/css/admin.css

vich_uploader:
    db_driver: orm

    mappings:
        productBase_image:
            uri_prefix:         /uploads/product_bases
            upload_destination: '%kernel.root_dir%/../web/uploads/product_bases'

            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true

stof_doctrine_extensions:
    orm:
        default:
            sortable: true
            sluggable: true

#fos_rest:
#    disable_csrf_role: ROLE_API
#    param_fetcher_listener: true
#    view:
#        mime_types:
#            json: ['application/json', 'application/json;version=1.0', 'application/json;version=1.1', 'application/json;version=1.2']
#        view_response_listener: 'force'
#        formats:
#            xml:  true
#            json: true
#        templating_formats:
#            html: true
#    format_listener:
#        rules:
#            - { path: ^/, priorities: [ html, json, xml ], fallback_format: ~, prefer_extension: true }
#    versioning:
#        enabled: true
#        resolvers:
#            media_type:
#                enabled: true
#    exception:
#        codes:
#            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
#            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
#        messages:
#            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
#    allowed_methods_listener: true
#    access_denied_listener:
#        json: true
#    body_listener: true

nelmio_api_doc: ~

httplug:
    classes:
        client: Http\Adapter\Guzzle6\Client
        message_factory: Http\Message\MessageFactory\GuzzleMessageFactory
    clients:
        acme:
            factory: httplug.factory.guzzle6

ivory_google_map:
    distance_matrix:
        client: httplug.client.default
        message_factory: httplug.message_factory.default
        format: json
        api_key: AIzaSyAwyWYXDO5yuJJ-q5uzsbk8r1BitLlY2zU